basePath: /api/v1
definitions:
  Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  error.Error:
    properties:
      error_code:
        type: string
      message:
        type: string
    type: object
  model.Backdrop:
    properties:
      backdrop_id:
        type: integer
      picture_url:
        type: string
      price:
        type: integer
    type: object
  model.BackdropID:
    properties:
      backdrop_id:
        type: integer
    type: object
  model.BackdropRes:
    properties:
      b_1:
        type: integer
      b_2:
        type: integer
      b_3:
        type: integer
      b_4:
        type: integer
      b_5:
        type: integer
    type: object
  model.GoldHistory:
    properties:
      change_number:
        type: integer
      reason:
        type: string
      residual_number:
        type: integer
      student_id:
        type: string
      time:
        type: string
    type: object
  model.ListHistories:
    properties:
      month_after:
        type: integer
      month_former:
        type: integer
      student_id:
        type: string
      week_after:
        type: integer
      week_former:
        type: integer
    type: object
  model.Punch:
    properties:
      id:
        type: integer
      number:
        type: integer
      title:
        type: string
    type: object
  model.PunchHistory:
    properties:
      day:
        type: integer
      id:
        type: integer
      month:
        type: integer
      student_id:
        type: string
      time:
        type: string
      title:
        type: string
    type: object
  model.Ranking:
    properties:
      ranking:
        type: integer
    type: object
  model.Title:
    properties:
      title:
        type: string
    type: object
  model.User:
    properties:
      current_backdrop:
        type: integer
      gold:
        type: integer
      name:
        type: string
      password:
        type: string
      privacy:
        type: integer
      student_id:
        type: string
      user_picture:
        type: string
    type: object
  model.UserRanking:
    properties:
      name:
        type: string
      number:
        type: integer
      ranking:
        type: integer
      student_id:
        type: string
      user_picture:
        type: string
    type: object
  model.WeekPunch:
    properties:
      number:
        type: integer
      week:
        type: integer
    type: object
host: 39.99.53.8:2333
info:
  contact:
    email: 864978550@qq.com
    name: TAODEI
  description: 自控力API
  termsOfService: http://swagger.io/terrms/
  title: Self_Control API
  version: 1.0.0
paths:
  /adm/del_backdrop/{student_id}:
    get:
      consumes:
      - application/json
      description: 管理员直接删除用户拥有的背景
      parameters:
      - description: student_id
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"删除成功"}'
          schema:
            $ref: '#/definitions/Response'
      summary: (管理员)清除用户背景
      tags:
      - administrator
  /adm/goldhistory:
    post:
      consumes:
      - application/json
      description: 管理员给某用户新增金币历史
      parameters:
      - description: 需要新增的金币历史:time和student_id重要,其他参数非必须 time格式 2021-08-06 19:04:05
        in: body
        name: goldhistory
        required: true
        schema:
          $ref: '#/definitions/model.GoldHistory'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"新增成功"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: (管理员)新增金币历史
      tags:
      - administrator
  /adm/punch:
    post:
      consumes:
      - application/json
      description: 管理员给某用户新增打卡记录
      parameters:
      - description: 需要新增的打卡记录:student_id month day为重要参数其他参数非必须 day是指这天为今年的第几天 time格式
          2021-08-06 19:04:05
        in: body
        name: punch
        required: true
        schema:
          $ref: '#/definitions/model.PunchHistory'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"新增成功"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: (管理员)新增打卡记录
      tags:
      - administrator
  /backdrop:
    get:
      description: 获取背景价格
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.Backdrop'
            type: array
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 背景价格
      tags:
      - Backdrop
    put:
      consumes:
      - application/json
      description: 根据背景id兑换背景
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: backdrop_id
        in: body
        name: backdrop_id
        required: true
        schema:
          $ref: '#/definitions/model.BackdropID'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"兑换成功"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 金币不足
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 兑换背景
      tags:
      - Backdrop
  /backdrops:
    get:
      consumes:
      - application/json
      description: 获取我的背景id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            $ref: '#/definitions/model.BackdropRes'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 我的背景
      tags:
      - Backdrop
  /list/{type}:
    put:
      consumes:
      - application/json
      description: 需要前进的排名
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: type
        in: path
        name: type
        required: true
        type: string
      - description: ranking
        in: body
        name: ranking
        required: true
        schema:
          $ref: '#/definitions/model.Ranking'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"兑换成功"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 金币不足
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 兑换排名
      tags:
      - List
  /list/history:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            $ref: '#/definitions/model.ListHistories'
        "203":
          description: 金币不足
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取兑换排名历史
      tags:
      - List
  /list/user/{id}/{type}:
    get:
      consumes:
      - application/json
      description: 根据 type 和 id 获取用户排名
      parameters:
      - description: type
        in: path
        name: type
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 用户排名
      tags:
      - List
  /lists/{type}:
    get:
      description: url最后面+week或month查询数据
      parameters:
      - description: type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取所有用户"}'
          schema:
            items:
              $ref: '#/definitions/model.UserRanking'
            type: array
        "203":
          description: 未检索到该时间段的打卡信息
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 排行榜数据
      tags:
      - List
  /punch:
    delete:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 需要删除的打卡title
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/model.Title'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"删除成功"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 删除失败,用户未选择该标签
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 删除标签
      tags:
      - punch
    get:
      consumes:
      - application/json
      description: 获取我的打卡（标签）
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.Punch'
            type: array
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 我的打卡
      tags:
      - punch
    post:
      consumes:
      - application/json
      description: 完成该用户今天的该打卡
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 卡的Title
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/model.Title'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"打卡成功"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 完成打卡
      tags:
      - punch
  /punch/all/{day}:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: day
        in: path
        name: day
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"未完成"}/{"msg":"未选择打卡"}/{"msg":"已全部完成且数量为返回的值"}'
          schema:
            $ref: '#/definitions/Response'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 判断某天是否已全部打卡
      tags:
      - punch
  /punch/create:
    post:
      consumes:
      - application/json
      description: 该用户新增一个打卡任务
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: title
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/model.Title'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"新增标签成功"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 该标签已选择" or "今日已完成全部打卡，不能再新增标签
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 增加标签
      tags:
      - punch
  /punch/day/{day}:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: day
        in: path
        name: day
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"1"}/{"msg":"0"}'
          schema:
            items:
              $ref: '#/definitions/model.Punch'
            type: array
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取用户某天的打卡
      tags:
      - punch
  /punch/month:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.Punch'
            type: array
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取某用户月报
      tags:
      - punch
  /punch/oneday/{title_id}/{day}:
    get:
      consumes:
      - application/json
      description: 在url末尾获取打卡的id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: title_id
        in: path
        name: title_id
        required: true
        type: integer
      - description: day
        in: path
        name: day
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            $ref: '#/definitions/Response'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 判断某天某卡是否已被打卡
      tags:
      - punch
  /punch/punch/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.Punch'
            type: array
        "203":
          description: 未找到该用户
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取某用户标签
      tags:
      - punch
  /punch/week/{month}:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: month
        in: path
        name: month
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"打卡成功"}'
          schema:
            items:
              $ref: '#/definitions/model.WeekPunch'
            type: array
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取用户月报的周数据
      tags:
      - punch
  /user:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            $ref: '#/definitions/model.User'
        "203":
          description: '{"error_code":"20001", "message":"Fail."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 用户信息
      tags:
      - user
    post:
      consumes:
      - application/json
      description: 学号密码登录
      parameters:
      - description: 登录的用户信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"将student_id作为token保留"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Password or account wrong."}
            身份认证失败 重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 登录
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 接收新的User结构体来修改用户信息
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: 需要修改的用户信息
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"修改成功"}'
          schema:
            $ref: '#/definitions/Response'
        "400":
          description: '{"error_code":"20001", "message":"Fail."} or {"error_code":"00002",
            "message":"Lack Param Or Param Not Satisfiable."}'
          schema:
            $ref: '#/definitions/error.Error'
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 修改用户信息
      tags:
      - user
  /user/goldhistory:
    get:
      consumes:
      - application/json
      description: 获取金币历史
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.GoldHistory'
            type: array
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 金币历史
      tags:
      - user
  /user/privacy/{id}:
    get:
      consumes:
      - application/json
      description: 判断该用户是否选择公开自己的打卡标签
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"默认为1 若要修改隐私 直接使用修改用户信息"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 未找到该用户
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 隐私
      tags:
      - user
  /user/punch:
    get:
      consumes:
      - application/json
      description: 获取我的打卡数
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取成功"}'
          schema:
            items:
              $ref: '#/definitions/model.Punch'
            type: array
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 我的打卡数
      tags:
      - user
  /user/title/{day}:
    get:
      consumes:
      - application/json
      description: 获取本用户在某天的打卡标签
      parameters:
      - description: day
        in: path
        name: day
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg":"获取本用户在某天的打卡标签"}'
          schema:
            $ref: '#/definitions/Response'
        "203":
          description: 未找到该用户
        "401":
          description: '{"error_code":"10001", "message":"Token Invalid."} 身份认证失败
            重新登录'
          schema:
            $ref: '#/definitions/error.Error'
        "500":
          description: '{"error_code":"30001", "message":"Fail."} 失败'
          schema:
            $ref: '#/definitions/error.Error'
      summary: 获取用户某天的标签
      tags:
      - user
schemes:
- http
swagger: "2.0"
